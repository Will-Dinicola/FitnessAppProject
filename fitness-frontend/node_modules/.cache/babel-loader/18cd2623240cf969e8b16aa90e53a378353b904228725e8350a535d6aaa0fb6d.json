{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seany\\\\Intro to Software\\\\FitnessAppProject\\\\fitness-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestFunction() {\n  _s();\n  // This line sets data to null, and says that setData will be the setter\n  const [data, setData] = useState(null);\n\n  // useEffect takes 2 args: 1st is the function to run, 2nd is when to re-run it\n  useEffect(() => {\n    // First arg: fetch data, convert to JSON, then set state\n    fetch(\"http://localhost:5000/api/data\").then(res => res.json()).then(data => setData(data.message));\n  }, []); // Second arg: empty array = run only once\n\n  // Line reads: if data is true, show it; else show \"Not loaded\"\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ? data : \"Not loaded\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}\n_s(TestFunction, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = TestFunction;\nfunction ExerciseSelector({\n  onSelect\n}) {\n  _s2();\n  const exercises = [\"Push-Up\", \"Squat\", \"Bench Press\", \"Deadlift\", \"Overhead Press\", \"Pull-Up\", \"Lunge\", \"Plank\", \"Bicep Curl\", \"Tricep Dip\"];\n  const [chosen, setChosen] = useState(exercises[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selector-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"exercise\",\n      className: \"selector-label\",\n      children: \"Choose an exercise:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"exercise\",\n      value: chosen,\n      onChange: e => setChosen(e.target.value),\n      className: \"exercise-select\",\n      children: exercises.map(ex => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: ex,\n        children: ex\n      }, ex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"select-button\",\n      onClick: () => onSelect(chosen),\n      children: \"Select Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s2(ExerciseSelector, \"y2OKmt1QincW818h4EsIjPFy2XI=\");\n_c2 = ExerciseSelector;\nfunction App() {\n  _s3();\n  const [selectedExercise, setSelectedExercise] = useState(\"\");\n  const handleExercise = exercise => {\n    setSelectedExercise(exercise);\n    console.log(\"Exercise chosen:\", exercise);\n    // TODO: integrate with workout state or API call here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TestFunction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseSelector, {\n      onSelect: handleExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), selectedExercise && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"selected-display\",\n      children: [\"Selected exercise: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedExercise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n_s3(App, \"NrdiMOBziv8luOXpIZOzIa4PSCs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TestFunction\");\n$RefreshReg$(_c2, \"ExerciseSelector\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TestFunction","_s","data","setData","fetch","then","res","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ExerciseSelector","onSelect","_s2","exercises","chosen","setChosen","className","htmlFor","id","value","onChange","e","target","map","ex","onClick","_c2","App","_s3","selectedExercise","setSelectedExercise","handleExercise","exercise","console","log","_c3","$RefreshReg$"],"sources":["C:/Users/seany/Intro to Software/FitnessAppProject/fitness-frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction TestFunction() {\r\n    // This line sets data to null, and says that setData will be the setter\r\n    const [data, setData] = useState(null);\r\n\r\n    // useEffect takes 2 args: 1st is the function to run, 2nd is when to re-run it\r\n    useEffect(() => {\r\n        // First arg: fetch data, convert to JSON, then set state\r\n        fetch(\"http://localhost:5000/api/data\")\r\n            .then((res) => res.json())\r\n            .then((data) => setData(data.message));\r\n    }, []); // Second arg: empty array = run only once\r\n\r\n    // Line reads: if data is true, show it; else show \"Not loaded\"\r\n    return <div>{data ? data : \"Not loaded\"}</div>;\r\n}\r\n\r\nfunction ExerciseSelector({ onSelect }) {\r\n    const exercises = [\r\n      \"Push-Up\",\r\n      \"Squat\",\r\n      \"Bench Press\",\r\n      \"Deadlift\",\r\n      \"Overhead Press\",\r\n      \"Pull-Up\",\r\n      \"Lunge\",\r\n      \"Plank\",\r\n      \"Bicep Curl\",\r\n      \"Tricep Dip\",\r\n    ];\r\n    const [chosen, setChosen] = useState(exercises[0]);\r\n  \r\n    return (\r\n      <div className=\"selector-container\">\r\n        <label htmlFor=\"exercise\" className=\"selector-label\">\r\n          Choose an exercise:\r\n        </label>\r\n        <select\r\n          id=\"exercise\"\r\n          value={chosen}\r\n          onChange={(e) => setChosen(e.target.value)}\r\n          className=\"exercise-select\"\r\n        >\r\n          {exercises.map((ex) => (\r\n            <option key={ex} value={ex}>\r\n              {ex}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button\r\n          className=\"select-button\"\r\n          onClick={() => onSelect(chosen)}\r\n        >\r\n          Select Exercise\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  function App() {\r\n    const [selectedExercise, setSelectedExercise] = useState(\"\");\r\n  \r\n    const handleExercise = (exercise) => {\r\n      setSelectedExercise(exercise);\r\n      console.log(\"Exercise chosen:\", exercise);\r\n      // TODO: integrate with workout state or API call here\r\n    };\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Fitness App</h1>\r\n        <TestFunction />\r\n        <ExerciseSelector onSelect={handleExercise} />\r\n        {selectedExercise && (\r\n          <p className=\"selected-display\">\r\n            Selected exercise: <strong>{selectedExercise}</strong>\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}